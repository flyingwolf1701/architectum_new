---
epic: "Core Blueprint Generation Framework"
features:
  - name: "Detail Level Configuration"
    description: "Configurable detail level system for controlling the granularity of information in representations"
    path: "arch_blueprint_generator/models/detail_level.py"
    components:
      - "enum DetailLevel"
      - "class DetailLevelConfig"
      - "method from_string"
      - "method to_dict"
      - "method from_dict"
      - "method uniform"

  - name: "Relationship Map"
    description: "Graph model capturing relationships between code elements, providing efficient navigation and querying"
    path: "arch_blueprint_generator/models/relationship_map.py"
    components:
      - "class RelationshipMap"
      - "method add_node"
      - "method add_relationship"
      - "method get_node"
      - "method get_nodes_by_type"
      - "method get_relationship"
      - "method get_outgoing_relationships"
      - "method get_incoming_relationships"
      - "method get_relationships_by_type"
      - "method remove_node"
      - "method remove_relationship"
      - "method clear"
      - "method node_count"
      - "method relationship_count"
      - "method get_node_type_counts"
      - "method get_relationship_type_counts"
      - "method get_subgraph"
      - "method find_nodes"
      - "method find_relationships"
      - "method shortest_path"
      - "method get_connected_components"
      - "method to_json"
      - "method from_json"
      - "method save"
      - "method load"
      - "method _apply_detail_level_to_node"
      - "method _apply_detail_level_to_relationship"

  - name: "Nodes and Relationships"
    description: "Core data structures for representing code elements and their relationships"
    path: "arch_blueprint_generator/models/nodes.py"
    components:
      - "enum NodeType"
      - "enum RelationshipType"
      - "class TypeInfo"
      - "class ParameterInfo"
      - "class PropertyInfo"
      - "class Node"
      - "class FileNode"
      - "class DirectoryNode"
      - "class FunctionNode"
      - "class ClassNode"
      - "class MethodNode"
      - "class FeatureNode"
      - "class Relationship"
      - "class ContainsRelationship"
      - "class CallsRelationship"
      - "class ImportsRelationship"
      - "class InheritsRelationship"
      - "class ImplementsRelationship"

  - name: "JSON Mirrors"
    description: "Parallel structure mirroring the original codebase with JSON representations for detailed content access"
    path: "arch_blueprint_generator/models/json_mirrors.py"
    components:
      - "class CodeElement"
      - "class FileContent"
      - "class DirectoryContent"
      - "class JSONMirrors"
      - "method get_mirror_path"
      - "method get_mirrored_content"
      - "method update_mirrored_content"
      - "method exists"
      - "method remove"
      - "method compute_file_hash"
      - "method is_mirror_up_to_date"
      - "method create_file_mirror"
      - "method create_directory_mirror"
      - "method list_all_mirrors"
      - "method scan_directory"
      - "method clear"
      - "method _apply_minimal_detail_to_file_content"
      - "method _apply_minimal_detail_to_directory_content"

  - name: "Path Scanner"
    description: "Scans directory structures to generate both Relationship Map and JSON Mirrors representations"
    path: "arch_blueprint_generator/scanner/path_scanner.py"
    components:
      - "class PathScanner"
      - "method scan"
      - "method _scan_directory"
      - "method _list_directory_content"
      - "method _clean_existing_nodes"
      - "method is_binary_file"

  - name: "Change Tracker"
    description: "Tracks file changes to determine which files need to be synchronized"
    path: "arch_blueprint_generator/sync/change_tracker.py"
    components:
      - "class ChangeTracker"
      - "method detect_changes"
      - "method _expand_paths"
      - "method _detect_deleted_files"
      - "method _is_within_paths"

  - name: "Arch Sync"
    description: "Implements the 'arch sync' functionality for synchronizing code with Architectum"
    path: "arch_blueprint_generator/sync/arch_sync.py"
    components:
      - "class ArchSync"
      - "method sync"
      - "method _prepare_paths"
      - "method _force_rescan"
      - "method _incremental_update"
      - "method _update_file"
      - "method _add_file"
      - "method _remove_file"
      - "method _clean_existing_file_nodes"

  - name: "Error Handling"
    description: "Custom exception hierarchy for specific error handling throughout the application"
    path: "arch_blueprint_generator/errors/exceptions.py"
    components:
      - "class ArchitectumError"
      - "class ParseError"
      - "class BlueprintError"
      - "class FileError"
      - "class ModelError"
      - "class BusinessError"

  - name: "Logging System"
    description: "Structured, colorized logging system for debugging and monitoring application state"
    path: "arch_blueprint_generator/utils/logging.py"
    components:
      - "function add_colors"
      - "function configure_logging"
      - "function get_logger"

  - name: "CLI Interface"
    description: "Command-line interface providing access to blueprint generation and synchronization features"
    path: "arch_blueprint_generator/cli/commands.py"
    components:
      - "function version_callback"
      - "function main"
      - "class OutputFormat"
      - "function blueprint_file"
      - "function scan"
      - "function sync"
